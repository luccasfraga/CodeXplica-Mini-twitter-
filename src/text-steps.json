{
  "step01": "<p>Vamos come√ßar definindo o espa√ßo onde vamos twittar. E vamos aproveitar e criar tamb√©m um cabe√ßalho para mostrar onde vamos twittar. Para isso vamos utilizar <a href='https://pt.wikipedia.org/wiki/HTML'><b> HTML</a> </b>que √© uma das linguagens que podemos utilizar pra criar websites.<br /><b style='color:#440071; font-size:16px'>> codeXplica:</b><br/>A linha 1 cria um DIV, este √© um elemento do HTML que cria um espa√ßo em branco onde podemos inserir qualquer conte√∫do<br />Dentro do <b>div</b> inserimos uma imagem com o elemento <b>img</b> que tem duas propriedades <b>src e alt</b>, onde <b>src</b> √© o nome do arquivo que vamos mostrar e o <b>alt</b>√© uma breve descri√ß√£o da imagem</p>",
  "step02": "<p>Acho que est√° faltando estilo para esse cabe√ßalho!!! Que tal deixarmos ele mais bonito utilizando CSS. CSS √© uma linguagem que pode criar estilos para cada elemento da nossa aplica√ß√£o.<br /><b style='color:#440071; font-size:16px'>> codeXplica:</b><br/>Primeiro precisamos dizer qual elemento do HTML vamos estilizar para isso chamamos o elemento <b>div</b>. Depois vamos colocar cada estilo. A propriedade <b>width</b> √© a largura do elemento. Depois, colocamos uma borda cinza, que em ingl√™s √© border e a cor √© grey <b>width</b>. Nossa borda tem outras propriedades como 1px e solid, ne? 1px(pixel) √© a finura dela e solid quer dizer s√≥lida. Ou seja, ela √© uma linha retinha, n√£o √© pontilhada e ou outro estilo. E por √∫ltimo o padding, que significa um preenchimento de espa√ßo em todos os cantinhos do nosso cabe√ßalho. Ent√£o, a gente coloca uns 30px(pixels), que √© a medida que fica legal. üòç <b></b> E se quiser saber mais dos elementos do <b>HTML</b> e propriedades do CSS,voc√™ pode acessar um site bem legal clicando <a href='https://www.w3schools.com/default.asp'><b> AQUI</a></p>",
  "step03": "<p>Agora √© hora de criarmos a √°rea onde vamos digitar nossos tweets. Para isso vamos usar um elemento do HTML chamado TextArea com a propriedade <b e alt>placeholder</b, onde <b>src</b> √© utilizada para deixar uma dica para o usu√°rio saber o que digitar naquele campo.</p>",
  "step04": "Agora vamos colocar tudo no seu devido lugar! Para isso vamos voltar a usar o <b>CSS</b>. Agora voc√™ j√° sabe que cada elemento do <b>HTML</b> pode ter seus pr√≥prios estilo.<br/>O componente <b>div</b>est√° novamente aumenta sua largura para ocupar toda a tela e agora utiliza o <b>display: flex</b>isso ir√° fazer com que todo o conte√∫do dentro do <b>div</b> tenha flexibilidade para que possamos alinhar os demais componentes.<br/>No componente <b>img</b> vamos definar a largura da foto do perfil para 45px, isso j√° far√° com que a altura fique na mesma propor√ß√£o.<br/>Agora para deixarmos a foto de perfil redonda vamos usar a propriedade <b>border-radius</b>  <b></b>",
  "step05": "<p>Lembra do CSS? Vamos usar ele novamente para deixar a lista dos tweets mais bonita.</p>",
  "step06": "<p>??</p>",
  "step07": "<p>Olha que legal, voc√™ acabou de construir seu pr√≥prio tweeter. Voc√™ passou por v√°rios passos, tudo que voc√™ construiu usando HTML e CSS chamamos de camada de aplica√ß√£o e o que foi criado com o JavaScript chamamos de camada de controle. Agora voc√™ sabe que uma aplica√ß√£o pode ser constru√≠da utilizando diferentes linguagens de programa√ß√£o e √© dividida em diferentes camadas</p>"
}
