{
  "step01": "Vamos come√ßar definindo o espa√ßo onde vamos twittar. E vamos aproveitar e criar tamb√©m um cabe√ßalho para mostrar onde vamos twittar. Para isso vamos utilizar <a href='https://pt.wikipedia.org/wiki/HTML'><b> HTML</a> </b>que √© uma das linguagens que podemos utilizar pra criar websites.<br /><b style='color:#440071; font-size:16px'>> codeXplica:</b><br/>A linha 1 cria um DIV, este √© um elemento do HTML que cria um espa√ßo em branco onde podemos inserir qualquer conte√∫do<br />Dentro do <b>div</b> inserimos uma imagem com o elemento <b>img</b> que tem duas propriedades <b>src e alt</b>, onde <b>src</b> √© o nome do arquivo que vamos mostrar e o <b>alt</b> √© uma breve descri√ß√£o da imagem",
  "step02": "Acho que est√° faltando estilo para esse cabe√ßalho!!! Que tal deixarmos ele mais bonito utilizando CSS. CSS √© uma linguagem que pode criar estilos para cada elemento da nossa aplica√ß√£o.<br /><b style='color:#440071; font-size:16px'>> codeXplica:</b><br/>Primeiro precisamos dizer qual elemento do HTML vamos estilizar para isso chamamos o elemento <b>div</b>. Depois vamos colocar cada estilo. A propriedade <b>width</b> √© a largura do elemento. <br><br>Depois, colocamos uma borda cinza, que em ingl√™s √© border e a cor √© grey <b>width</b>. Nossa borda tem outras propriedades como 1px e solid, ne? 1px(pixel) √© a finura dela e solid quer dizer s√≥lida. Ou seja, ela √© uma linha retinha, n√£o √© pontilhada e ou outro estilo. E por √∫ltimo o padding, que significa um preenchimento de espa√ßo em todos os cantinhos do nosso cabe√ßalho. Ent√£o, a gente coloca uns 30px(pixels), que √© a medida que fica legal. üòç <b></b> E se quiser saber mais dos elementos do <b>HTML</b> e propriedades do CSS,voc√™ pode acessar um site bem legal clicando <a href='https://www.w3schools.com/default.asp'><b> AQUI</a>",
  "step03": "Agora √© hora de criarmos a √°rea onde vamos digitar nossos tweets e onde tem o nosso perfil. Para isso vamos usar mais alguns elementos do HTML. Vamos apresentar esses novos elementos:  <b>text area e button </b>. Text area √© nossa caixinha de texto, onde vamos digitar nosso twitte. E button √© nosso bot√£o, para enviar nosso twitte. ü§ì Para saber mais desses elementos, clique <a href='https://www.w3schools.com/default.asp'><b> AQUI</a>",
  "step04": "Que tal agora criarmos o bot√£o que envia o tweet? Vamos entrar agora em uma Linguagem de Programa√ß√£o chamada Javascript. O Javascript nos deixa criar mecanismos din√¢micos em nossas p√°ginas, assim podemos interagir com os componentes HTML que criamos anterioirmente. Agora vamos fazer nosso tweet ficar armazenado na nuvem!",
  "step05": "Voltando para o HTML para criarmos o nosso nome no twitte e o texto. O elemento agora a ser apresentado √© o <b>p</b>. Ele representa o par√°grafo, n√≥s tamb√©m chamamos ele de elemento block, ou seja, ele autom√°ticamente vai para a linha de baixo, sempre que ele for colocado. E o elemento <b>b</>, que significa bold, que √© negrito. Ih, j√° esqueceu o que era o elemento <b> div</b>? Relaxa, √© uma divis√£o, uma caixa onde voc√™ pode colocar outros elementos. E mais pra frente voc√™ entender√° como ela nos ajuda a posicionar tudo na tela! Anotado? ‚úå",
  "step06": "Opa, estamos quase acabando o nosso Twitter! Agora o estilo ou seja, nosso CSS. As propriedades s√£o cada vez mais complicadinhas. Vamos explicar as novas propriedades e como chegamos at√© aqui. Parece que n√£o tem muito estilo, ne? <br>Mas por tr√°s desses dois simples par√°grafos, tem sim! O <b>display: flex</b> deixa a posi√ß√£o dos textos flex√≠veis para posicionarmos onde queremos. Com isso a outra propriedade <b> flex-column</b> fica dispon√≠vel e n√≥s queremos que fique um embaixo do outro, ent√£o usamos o <b>column</b>. Agora pratimente terminamos! O resultado est√° pr√≥ximo! üëèüëèüëè",
  "step07": "Olha que legal, voc√™ acabou de construir seu pr√≥prio tweeter. Voc√™ passou por v√°rios passos, tudo que voc√™ construiu usando HTML e CSS chamamos de camada de aplica√ß√£o e o que foi criado com o JavaScript chamamos de camada de controle. Agora voc√™ sabe que uma aplica√ß√£o pode ser constru√≠da utilizando diferentes linguagens de programa√ß√£o e √© dividida em diferentes camadas"
}
